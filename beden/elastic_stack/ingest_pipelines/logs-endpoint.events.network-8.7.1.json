{
 "_meta": {
  "managed": true,
  "managed_by": "fleet",
  "package": {
   "name": "endpoint"
  }
 },
 "description": "Pipeline for network events",
 "processors": [
  {
   "set": {
    "field": "event.ingested",
    "ignore_failure": true,
    "value": "{{ _ingest.timestamp }}"
   }
  },
  {
   "geoip": {
    "field": "source.ip",
    "ignore_missing": true,
    "properties": [
     "continent_name",
     "country_name",
     "country_iso_code",
     "region_iso_code",
     "region_name",
     "city_name",
     "location"
    ],
    "target_field": "source.geo"
   }
  },
  {
   "geoip": {
    "database_file": "GeoLite2-ASN.mmdb",
    "field": "source.ip",
    "ignore_missing": true,
    "properties": [
     "asn",
     "organization_name"
    ],
    "target_field": "source.as"
   }
  },
  {
   "geoip": {
    "field": "destination.ip",
    "ignore_missing": true,
    "properties": [
     "continent_name",
     "country_name",
     "country_iso_code",
     "region_iso_code",
     "region_name",
     "city_name",
     "location"
    ],
    "target_field": "destination.geo"
   }
  },
  {
   "geoip": {
    "database_file": "GeoLite2-ASN.mmdb",
    "field": "destination.ip",
    "ignore_missing": true,
    "properties": [
     "asn",
     "organization_name"
    ],
    "target_field": "destination.as"
   }
  },
  {
   "rename": {
    "field": "source.as.asn",
    "ignore_missing": true,
    "target_field": "source.as.number"
   }
  },
  {
   "rename": {
    "field": "source.as.organization_name",
    "ignore_missing": true,
    "target_field": "source.as.organization.name"
   }
  },
  {
   "rename": {
    "field": "destination.as.asn",
    "ignore_missing": true,
    "target_field": "destination.as.number"
   }
  },
  {
   "rename": {
    "field": "destination.as.organization_name",
    "ignore_missing": true,
    "target_field": "destination.as.organization.name"
   }
  },
  {
   "grok": {
    "field": "message",
    "if": "ctx.network?.protocol == 'dns'",
    "ignore_failure": true,
    "ignore_missing": true,
    "patterns": [
     "^DNS query is completed for the name .* type %{WORD:dns.question.Ext_temp.type}"
    ]
   }
  },
  {
   "script": {
    "if": "ctx.network?.protocol == 'dns' \u0026\u0026 ctx.dns?.question?.Ext_temp?.type != null \u0026\u0026 ctx.dns?.question?.type == null",
    "ignore_failure": true,
    "source": "Map typeMap = ['1': 'A', '2': 'NS', '3': 'MD', '4': 'MF', '5': 'CNAME', '6': 'SOA', '7': 'MB', '8': 'MG', '9': 'MR',\n  '10': 'NULL', '11': 'WKS', '12': 'PTR', '13': 'HINFO', '14': 'MINFO', '15': 'MX', '16': 'TXT', '17': 'RP', '18': 'AFSDB',\n  '19': 'X25', '20': 'ISDN', '21': 'RT', '22': 'NSAP', '23': 'NSAPPTR', '24': 'SIG', '25': 'KEY', '26': 'PX',\n  '27': 'GPOS', '28': 'AAAA', '29': 'LOC', '30': 'NXT', '31': 'EID', '32': 'NIMLOC', '33': 'SRV', '34': 'ATMA',\n  '35': 'NAPTR', '36': 'KX', '37': 'CERT', '38': 'A6', '39': 'DNAME', '40': 'SINK', '41': 'OPT', '42': 'APL',\n  '43': 'DS', '44': 'SSHFP', '45': 'ISECKEY', '46': 'RRSIG', '47': 'NSEC', '48': 'DNSKEY', '49': 'DHCID',\n  '50': 'NSEC3', '51': 'NSEC3PARAM', '52': 'TLSA', '53': 'SMIMEA', '55': 'HIP', '56': 'NINFO', '57': 'RKEY',\n  '58': 'TALINK', '59': 'CDS', '60': 'CDNSKEY', '61': 'OPENPGPKEY', '62': 'CSYNC', '63': 'ZONEMD', '64': 'SVCB',\n  '65': 'HTTPS', '99': 'SPF', '100': 'UINFO', '101': 'UID', '102': 'GID', '103': 'UNSPEC', '104': 'NID',\n  '105': 'L32', '106': 'L64', '107': 'LP', '108': 'EUI48', '109': 'EUI64', '249': 'TKEY', '250': 'TSIG',\n  '251': 'IXFR', '252': 'AXFR', '253': 'MAILB', '254': 'MAILA', '255': 'ANY','256': 'URI', '257': 'CAA',\n  '258': 'AVC'];\ndef type = typeMap[ctx.dns.question.Ext_temp.type]; if (type != null) {\n  ctx.dns.question.type = type;\n}"
   }
  },
  {
   "remove": {
    "field": "dns.question.Ext_temp",
    "if": "ctx.network?.protocol == 'dns'",
    "ignore_failure": true,
    "ignore_missing": true
   }
  },
  {
   "pipeline": {
    "ignore_missing_pipeline": true,
    "name": "logs-endpoint.events.network@custom"
   }
  }
 ]
}